// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------- //
// ide_cr_loader //
// ------------- //

#define ide_cr_loader_wrap_target 0
#define ide_cr_loader_wrap 4

static const uint16_t ide_cr_loader_program_instructions[] = {
            //     .wrap_target
    0xa0e1, //  0: mov    osr, x
    0x20c0, //  1: wait   1 irq, 0
    0x7010, //  2: out    pins, 16        side 0
    0x6190, //  3: out    pindirs, 16            [1]
    0x7890, //  4: out    pindirs, 16     side 1
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ide_cr_loader_program = {
    .instructions = ide_cr_loader_program_instructions,
    .length = 5,
    .origin = -1,
};

static inline pio_sm_config ide_cr_loader_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ide_cr_loader_wrap_target, offset + ide_cr_loader_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

// ------------- //
// ide_reg_write //
// ------------- //

#define ide_reg_write_wrap_target 0
#define ide_reg_write_wrap 6

static const uint16_t ide_reg_write_program_instructions[] = {
            //     .wrap_target
    0x2019, //  0: wait   0 gpio, 25
    0xc000, //  1: irq    nowait 0
    0x5805, //  2: in     pins, 5         side 1
    0x5859, //  3: in     y, 25           side 1
    0x2099, //  4: wait   1 gpio, 25
    0x4000, //  5: in     pins, 32
    0xc000, //  6: irq    nowait 0
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ide_reg_write_program = {
    .instructions = ide_reg_write_program_instructions,
    .length = 7,
    .origin = -1,
};

static inline pio_sm_config ide_reg_write_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ide_reg_write_wrap_target, offset + ide_reg_write_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

// ------------ //
// ide_reg_read //
// ------------ //

#define ide_reg_read_wrap_target 0
#define ide_reg_read_wrap 9

static const uint16_t ide_reg_read_program_instructions[] = {
            //     .wrap_target
    0x2018, //  0: wait   0 gpio, 24
    0xc000, //  1: irq    nowait 0
    0x5c05, //  2: in     pins, 5         side 3
    0x5c5a, //  3: in     y, 26           side 3
    0xa1eb, //  4: mov    osr, !null             [1]
    0x6090, //  5: out    pindirs, 16
    0x80a0, //  6: pull   block
    0x6000, //  7: out    pins, 32
    0x2098, //  8: wait   1 gpio, 24
    0xc000, //  9: irq    nowait 0
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ide_reg_read_program = {
    .instructions = ide_reg_read_program_instructions,
    .length = 10,
    .origin = -1,
};

static inline pio_sm_config ide_reg_read_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ide_reg_read_wrap_target, offset + ide_reg_read_wrap);
    sm_config_set_sideset(&c, 3, true, false);
    return c;
}
#endif

